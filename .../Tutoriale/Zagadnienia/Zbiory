Zbiory

ZbiÃ³r jest nieposegregowanym kontenerem na dane. Co wiÄ™cej zbiÃ³r posiada jedynie unikatowe wartoÅ›ci â€“ brak powtÃ³rzeÅ„.

SkÅ‚adnia:

    zbior = {1,2,3,4,5}

ZawartoÅ›Ä‡ zbioru zamkniÄ™ta jest pomiÄ™dzy nawiasami klamrowymi.

PrzykÅ‚ad:

    zbior = {'kot', 'pies', 'mysz', 'kot', 'chomik', 'kaczka'}
    print(zbior)

Efekt:

    {'mysz', 'kaczka', 'kot', 'pies', 'chomik'}

TworzÄ…c zbiÃ³r wstawiliÅ›my 2 razy ciÄ…g znakÃ³w: â€˜kotâ€™. Jak widzimy na wypisaniu zawartoÅ›ci zbioru, kot jest tylko jeden ğŸ™‚ PamiÄ™tamy â€“ w zbiorze nie ma powtÃ³rzeÅ„, jedynie unikatowe wartoÅ›ci.

 
Konwersja listy na zbiÃ³r i odwrotnie

Do konwersji listy na zbiÃ³r uÅ¼yjemy modyfikatora set(nazwalisty), natomiast do konwersji zbioru na listÄ™ list(nazwazbioru).

PrzykÅ‚ad:

    lista1 = ['a', 2, 'b', 3, 'c', 1, 'a']
    print(lista1)
    zbior1 = set(lista1)
    print(zbior1)
    lista2 = list(zbior1)
    print(lista2)

Efekt:

    ['a', 2, 'b', 3, 'c', 1, 'a']
    {1, 2, 3, 'b', 'a', 'c'}
    [1, 2, 3, 'b', 'a', 'c']

Jak widzimy, w przypadku, gdy lista zawieraÅ‚a elementy zdublowane, po konwersji na zbiÃ³r, powtÃ³rzenia zostaÅ‚y usuniÄ™te.

 
Dodanie elementu do zbioru

Element do zbioru dodamy za pomocÄ… metody add(wartoÅ›Ä‡ elementu).

PrzykÅ‚ad:

    zbior1 = {1,2,3}
    zbior1.add(4)
    print(zbior1)

Efekt:

    {1, 2, 3, 4}

 
UsuniÄ™cie elementu ze zbioru

UsuniÄ™cia elementu ze zbioru dokonamy za pomocÄ… metody remove(wartoÅ›Ä‡ elementu)

PrzykÅ‚ad:

    zbior1 = {1,2,3}
    zbior1.remove(2)
    print(zbior1)

Efekt:

    {1, 3}

 
Sprawdzenie czy element naleÅ¼y do zbioru

PrzykÅ‚ad:

    zbior1 = {1,2,3}
    print(3 in zbior1)

Za pomocÄ… instrukcji in, sprawdzamy czy 3 naleÅ¼y do zbioru zbior1. OtrzymaÄ‡ moÅ¼emy 2 odpowiedzi: True lub False.

W naszym przypadku odpowiedziÄ… bÄ™dzie oczywiÅ›cie True.
