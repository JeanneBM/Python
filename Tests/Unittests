https://docs.python.org/3/library/unittest.html

import unittest

class TestStringMethods(unittest.TestCase):

    def test_upper(self):
        self.assertEqual('foo'.upper(), 'FOO')

    def test_isupper(self):
        self.assertTrue('FOO'.isupper())
        self.assertFalse('Foo'.isupper())

    def test_split(self):
        s = 'hello world'
        self.assertEqual(s.split(), ['hello', 'world'])
        # check that s.split fails when the separator is not a string
        with self.assertRaises(TypeError):
            s.split(2)

if __name__ == '__main__':
    unittest.main()
    
-----------------------------------------------------------------------------------------------------------

Testing started at 22:37 ...


Ran 3 tests in 0.001s

OK
Launching unittests with arguments python -m unittest /home/.../.py in /home/...


Process finished with exit code 0


python -m unittest test_module1 test_module2
python -m unittest test_module.TestClass
python -m unittest test_module.TestClass.test_method

python -m unittest tests/test_something.py
python -m unittest -v test_module

python -m unittest
python -m unittest -h



----------------------------------------------------------------
python -v unittest tests/test_something.py:         #a higher level of verbosity, and produce

test_isupper (__main__.TestStringMethods) ... ok
test_split (__main__.TestStringMethods) ... ok
test_upper (__main__.TestStringMethods) ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.001s

OK
-----------------------------------------------------------------------------------------------------------

