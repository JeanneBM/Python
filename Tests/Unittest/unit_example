
class Person:
    name = []

    def set_name(self, user_name):
        self.name.append(user_name)
        return len(self.name) - 1

    def get_name(self, user_id):
        if user_id >= len(self.name):
            return 'There is no such user'
        else:
            return self.name[user_id]


if __name__ == '__main__':
    person = Person()
    print('User Asia has been added with id ', person.set_name('Asia'))
    print('User associated with id 0 is', person.get_name(0))
    
------------------------------------------------------------------------------------------------------------------------

User Abbas has been added with id  0
User associated with id 0 is  Abbas

Process finished with exit code 0

------------------------------------------------------------------------------------------------------------------------


import unittest


class Testing(unittest.TestCase):
    def test_string(self):
        a = 'some'
        b = 'some'
        self.assertEqual(a, b)

    def test_boolean(self):
        a = True
        b = True
        self.assertEqual(a, b)

if __name__ == '__main__':
    unittest.main()
    
------------------------------------------------------------------------------------------------------------------------

If youâ€™re using PyCharm IDE, you can simply press ctrl+shift+F10 to run unittest module. Otherwise you can use command prompt to run this module. For example, we named the file for unit-testing as Basic_Test.py. So the command to run python unittest will be:
$python3.6 -m unittest Basic_Test.Testing

If you want to see the verbose, then the command will be;
$python3.6 -m unittest -v Basic_Test.Testing

------------------------------------------------------------------------------------------------------------------------

Ran 2 tests in 0.001s

OK

Process finished with exit code 0

------------------------------------------------------------------------------------------------------------------------

